name: SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build, Test and Analyze
    runs-on: windows-latest

    steps:

      # Setup Java JDK 17 for SonarCloud
      - name: Setup JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: 17
          distribution: 'zulu'

      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # avoid shallow clones for better PR analysis

      # Cache SonarCloud packages to speed up builds
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Cache SonarCloud scanner
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      # Install or update dotnet-sonarscanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          $scannerPath = "${{ runner.temp }}\scanner"

          # Create scanner directory if it does not exist
          New-Item -Path $scannerPath -ItemType Directory

          # Install or update the scanner tool
          dotnet tool update dotnet-sonarscanner `
            --tool-path $scannerPath

      # Setup .NET 8
      - name: Setup .NET 8
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: '8.0.x'

      # Restore project dependencies
      - name: Restore dependencies
        run: dotnet restore

      # Compile, test and send analysis to SonarCloud
      - name: Build, Test and Analyze
        if: github.actor != 'dependabot[bot]'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # SonarCloud token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # allows PR comments
        shell: powershell
        run: |
          $scannerPath = "${{ runner.temp }}\scanner\dotnet-sonarscanner"

          # Start SonarCloud analysis
          & $scannerPath begin `
            /k:"alexa2me_catalog-api" `
            /o:"alexa2me" `
            /d:sonar.token="$env:SONAR_TOKEN" `
            /d:sonar.cs.opencover.reportsPaths="**/TestResults/coverage.opencover.xml" `
            /d:sonar.exclusions="**/bin/**;**/obj/**;**/Migrations/**" `
            /d:sonar.coverage.exclusions="**/Program.cs;**/Startup.cs;**/Migrations/**" `
            /d:sonar.pullrequest.github.token="$env:GITHUB_TOKEN" `
            /d:sonar.sourceEncoding="UTF-8"

          # Build the project
          dotnet build --configuration Release --no-incremental

          # Run tests with coverage
          dotnet test --no-build --configuration Release `
            /p:CollectCoverage=true `
            /p:CoverletOutputFormat=opencover `
            /p:CoverletOutput=TestResults/coverage.opencover.xml

          # Finalize SonarCloud analysis
          & $scannerPath end `
            /d:sonar.token="$env:SONAR_TOKEN"
